---
language: php

cache:
  directories:
    - $HOME/.composer/cache/files

php:
- nightly


env:
  global:
  - PATH=~/.composer/vendor/bin:vendor/bin:$PATH
  - TEST_LINT=`true`

matrix:
  fast_finish: true
  include:
  - php: nightly
  - php: nightly
    env:
    - SYMFONY_VERSION="^5@beta"
  - php: nightly
    env:
    - SYMFONY_VERSION="^4@beta"
  - php: 7.3
    env:
    - SYMFONY_VERSION="^5@beta"
  - php: 7.2
  - php: 7.2
    env:
    - SYMFONY_LTS="3"
  - php: 7.2
    env:
    - SYMFONY_LTS="2"
  - php: 7.2
    env:
    - SYMFONY_VERSION="2.7.*"
  - php: 7.2
    env:
    - SYMFONY_VERSION="2.3.*"
  - php: 7.1
  - php: 7.1
    env:
    - SYMFONY_VERSION="^4@beta"
  - php: 7.0
  - php: 5.6
  - php: 5.5
  - php: 5.4 # Symfony 2.8
  - php: 5.4
    env:
    - SYMFONY_VERSION="2.7.*"
  - php: 5.4
    env:
    - SYMFONY_VERSION="2.3.*"
  - php: 5.3 # Symfony 2.8. First PHP version with "composer"
    dist: precise
  - php: 5.3
    dist: precise
    env:
    - SYMFONY_VERSION="2.7.*"
  - php: 5.3
    dist: precise
    env:
    - SYMFONY_VERSION="2.3.*"
  allow_failures:
  - php: nightly
  - php: 7.3
  - php: 5.3
  - env:
    - SYMFONY_VERSION="^5@beta"
  - env:
    - SYMFONY_VERSION="^4@beta"
  - env:
    - SYMFONY_VERSION="2.7.*" # https://github.com/symfony/symfony/issues/26315
  - env:
    - SYMFONY_VERSION="2.3.*"

before_install:
- echo $PHPUNIT
- pwd
- echo $HOME
- echo $TRAVIS_PHP_VERSION
- which composer
- ls /tmp
- php --ini
- xdebug=/home/travis/.phpenv/versions/$TRAVIS_PHP_VERSION/etc/conf.d/xdebug.ini
- if [[ -f $xdebug ]]; then cat $xdebug; cp $xdebug /tmp; phpenv config-rm xdebug.ini; fi
- xdebug_php=
- if [[ -f /tmp/xdebug.ini ]]; then xdebug_php='-c /tmp/xdebug.ini'; fi
- install --directory .travis/bin

- if [[ -v SYMFONY_VERSION ]]; then composer global require symfony/symfony:${SYMFONY_VERSION} --no-scripts --no-progress --no-suggest --optimize-autoloader --apcu-autoloader; fi
- if [[ -v SYMFONY_VERSION ]]; then composer require symfony/symfony:${SYMFONY_VERSION} --no-scripts --no-progress --no-suggest --optimize-autoloader --apcu-autoloader; fi
- if [[ -v SYMFONY_LTS ]]; then composer global require symfony/lts:${SYMFONY_LTS} --no-scripts --no-progress --no-suggest --optimize-autoloader --apcu-autoloader; fi
- if [[ -v SYMFONY_LTS ]]; then composer require symfony/lts:${SYMFONY_LTS} --no-scripts --no-progress --no-suggest --optimize-autoloader --apcu-autoloader; fi

- composer global require --dev friendsofphp/php-cs-fixer:">=1.12" || true
- composer global require --dev phpstan/phpstan-phpunit || composer global require --dev phpunit/phpunit:">=4"
- composer global require --dev sensiolabs/security-checker || composer global require --dev sensiolabs/security-checker:^3.0

install:
- composer validate
# - if [[ -v SYMFONY_VERSION ]]; then composer require symfony/symfony:${SYMFONY_VERSION} --no-scripts --no-progress --no-suggest; fi
- composer install --no-scripts --no-progress --no-suggest
- if [[ -f config/parameters.yml.travis ]]; then cp config/parameters.yml.travis config/parameters.yml; fi
- composer up --no-progress --no-suggest --optimize-autoloader --apcu-autoloader
- composer show

before_script:

script:
- for f in $(find . -path './vendor' -prune -o -path './tests' -prune -o -name \*.php -print) ; do php -l $f ; done # Do this first!
- if [[ -v TEST_LINT ]]; then for f in $(find ./tests -name \*.php -print); do php -l $f; done; fi
- if command -v php-cs-fixer; then php-cs-fixer fix --diff --dry-run -vvv --using-cache=no; fi
- if command -v phpstan; then phpstan analyse -v --level max src/Generator/*.php; fi
- php $xdebug_php $(command -v phpunit)
- security-checker security:check --end-point=http://security.sensiolabs.org/check_lock ~/.composer/composer.lock
- security-checker security:check --end-point=http://security.sensiolabs.org/check_lock
  #^ This checks that the application doesn't use dependencies with known security vulnerabilities
- if [[ -v VENDOR_LINT ]]; then for f in $(find ./vendor -name \*.php); do php -l $f > /dev/null; done; fi
  #^ Should be the last line of install but sometimes long to execute and little can be done for errors found.

after_success:
- bash <(curl -s https://codecov.io/bash) -s /tmp

# inspirated from:
  # symfony/symfony-demo
  # https://github.com/doctrine/dbal/blob/v2.5.13/.travis.yml
